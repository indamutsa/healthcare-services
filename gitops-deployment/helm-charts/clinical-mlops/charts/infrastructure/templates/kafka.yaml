apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.kafka.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.kafka.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ .Values.kafka.name }}
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.kafka.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.kafka.name }}
    spec:
      containers:
      - name: {{ .Values.kafka.name }}
        image: {{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: {{ .Values.zookeeper.name }}:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://$(POD_NAME).{{ .Values.kafka.name }}:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "{{ .Values.kafka.replicas }}"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "{{ .Values.kafka.replicas }}"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "{{ .Values.kafka.replicas }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        resources:
          {{- toYaml .Values.kafka.resources | nindent 12 }}
        livenessProbe:
          exec:
            command:
            - kafka-broker-api-versions
            - --bootstrap-server
            - localhost:9092
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - kafka-broker-api-versions
            - --bootstrap-server
            - localhost:9092
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: {{ .Values.kafka.pvc.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.kafka.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.kafka.name }}
spec:
  ports:
  - port: 9092
    targetPort: 9092
  clusterIP: None
  selector:
    app: {{ .Values.kafka.name }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.kafka.pvc.name }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.kafka.pvc.size }}
  {{- if .Values.kafka.pvc.storageClassName }}
  storageClassName: {{ .Values.kafka.pvc.storageClassName }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.zookeeper.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.zookeeper.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ .Values.zookeeper.name }}
  replicas: {{ .Values.zookeeper.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.zookeeper.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.zookeeper.name }}
    spec:
      containers:
      - name: {{ .Values.zookeeper.name }}
        image: {{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag }}
        ports:
        - containerPort: 2181
        env:
        - name: ZOO_MY_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ZOO_SERVERS
          value: "server.1={{ .Values.zookeeper.name }}-0.{{ .Values.zookeeper.name }}:2888:3888;2181 server.2={{ .Values.zookeeper.name }}-1.{{ .Values.zookeeper.name }}:2888:3888;2181 server.3={{ .Values.zookeeper.name }}-2.{{ .Values.zookeeper.name }}:2888:3888;2181"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /data
        resources:
          {{- toYaml .Values.zookeeper.resources | nindent 12 }}
        livenessProbe:
          exec:
            command:
            - zkOk.sh
            - 127.0.0.1
            - 2181
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - zkOk.sh
            - 127.0.0.1
            - 2181
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: zookeeper-data
        persistentVolumeClaim:
          claimName: {{ .Values.zookeeper.pvc.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.zookeeper.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.zookeeper.name }}
spec:
  ports:
  - port: 2181
    targetPort: 2181
  clusterIP: None
  selector:
    app: {{ .Values.zookeeper.name }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.zookeeper.pvc.name }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.zookeeper.pvc.size }}
  {{- if .Values.zookeeper.pvc.storageClassName }}
  storageClassName: {{ .Values.zookeeper.pvc.storageClassName }}
  {{- end }}