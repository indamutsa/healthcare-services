{{- if .Values.sparkMaster.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.sparkMaster.name | default "spark-master" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.sparkMaster.name | default "spark-master" }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.sparkMaster.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.sparkMaster.name | default "spark-master" }}
  template:
    metadata:
      labels:
        app: {{ .Values.sparkMaster.name | default "spark-master" }}
    spec:
      containers:
      - name: {{ .Values.sparkMaster.name | default "spark-master" }}
        image: "{{ .Values.sparkMaster.image.repository }}:{{ .Values.sparkMaster.image.tag }}"
        imagePullPolicy: {{ .Values.sparkMaster.image.pullPolicy }}
        ports:
        - containerPort: 7077
        - containerPort: 8080
        env:
        - name: SPARK_MASTER_HOST
          value: "{{ .Values.sparkMaster.name | default "spark-master" }}"
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_MASTER_WEBUI_PORT
          value: "8080"
        resources:
          {{- toYaml .Values.sparkMaster.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.sparkMaster.name | default "spark-master" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.sparkMaster.name | default "spark-master" }}
spec:
  ports:
  - port: 7077
    targetPort: 7077
    name: spark
  - port: 8080
    targetPort: 8080
    name: webui
  selector:
    app: {{ .Values.sparkMaster.name | default "spark-master" }}
{{- end }}