# MLflow with MinIO S3 Storage for Artifacts
# Uses MinIO object storage instead of PVC for scalability

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: clinical-mlops
  labels:
    app: mlflow
    tier: ml-pipeline
    layer: level4
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
        tier: ml-pipeline
        layer: level4
    spec:
      containers:
      - name: mlflow
        image: ghcr.io/mlflow/mlflow:v2.9.2
        ports:
        - containerPort: 5000
          name: http
        env:
        # PostgreSQL backend for metadata
        - name: MLFLOW_BACKEND_STORE_URI
          valueFrom:
            secretKeyRef:
              name: postgres-mlflow-credentials
              key: connection-string

        # MinIO S3 for artifact storage
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio:9000"

        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: accessKey

        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secretKey

        # Use S3 for default artifact root
        - name: MLFLOW_DEFAULT_ARTIFACT_ROOT
          value: "s3://mlflow-artifacts/"

        # Disable SSL verification for MinIO
        - name: MLFLOW_S3_IGNORE_TLS
          value: "true"

        - name: AWS_DEFAULT_REGION
          value: "us-east-1"

        command:
        - mlflow
        - server
        - --host
        - "0.0.0.0"
        - --port
        - "5000"
        - --backend-store-uri
        - $(MLFLOW_BACKEND_STORE_URI)
        - --default-artifact-root
        - $(MLFLOW_DEFAULT_ARTIFACT_ROOT)

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1"

        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10

        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: clinical-mlops
  labels:
    app: mlflow
    tier: ml-pipeline
spec:
  selector:
    app: mlflow
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  type: ClusterIP

---
# PodDisruptionBudget for MLflow HA
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mlflow-pdb
  namespace: clinical-mlops
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mlflow
