global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'clinical-mlops'
    environment: 'production'

# Alerting rules
rule_files:
  - "alerts/*.yml"
  - "rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Clinical Data Gateway
  - job_name: 'clinical-gateway'
    static_configs:
      - targets: ['clinical-data-gateway:8000']
    metrics_path: /metrics
    scrape_interval: 10s

  # Model Serving
  - job_name: 'model-serving'
    static_configs:
      - targets: ['model-serving:8080']
    metrics_path: /metrics
    scrape_interval: 10s

  # Feature Store
  - job_name: 'feature-store'
    static_configs:
      - targets: ['feature-store:8080']
    metrics_path: /metrics
    scrape_interval: 30s

  # MLflow
  - job_name: 'mlflow'
    static_configs:
      - targets: ['mlflow:5000']
    metrics_path: /metrics
    scrape_interval: 30s

  # Airflow
  - job_name: 'airflow'
    static_configs:
      - targets: ['airflow-web:8080']
    metrics_path: /admin/metrics
    scrape_interval: 30s

  # Kafka
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka:9092']
    metrics_path: /metrics
    scrape_interval: 15s

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: /metrics
    scrape_interval: 15s

  # PostgreSQL
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics
    scrape_interval: 30s

  # Istio Mesh
  - job_name: 'istio-mesh'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - istio-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: istio-telemetry
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http-monitoring

  # Custom Application Metrics
  - job_name: 'monitoring-service'
    static_configs:
      - targets: ['monitoring-service:8001']
    metrics_path: /metrics
    scrape_interval: 15s

# Remote write configuration (optional, for long-term storage)
remote_write:
  - url: "http://prometheus-remote-storage:9201/api/v1/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 10GB