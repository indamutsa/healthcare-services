[core]
dags_folder = /opt/airflow/dags
base_log_folder = /opt/airflow/logs
remote_logging = False
load_examples = False
load_default_connections = False
dags_are_paused_at_creation = True
executor = LocalExecutor
sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
parallelism = 32
dag_concurrency = 16
max_active_runs_per_dag = 8
dagbag_import_timeout = 30
dag_file_processor_timeout = 50
dag_run_conf_overrides_params = True

[scheduler]
job_heartbeat_sec = 5
scheduler_heartbeat_sec = 5
run_duration = -1
min_file_process_interval = 10
dag_dir_list_interval = 30
parsing_processes = 2
catchup_by_default = False

[webserver]
web_server_port = 8080
web_server_host = 0.0.0.0
base_url = http://localhost:8080
default_ui_timezone = UTC
workers = 4
worker_class = sync
worker_refresh_interval = 30
secret_key = clinical_trials_airflow_secret_2024

[api]
auth_backends = airflow.api.auth.backend.basic_auth

[email]
email_backend = airflow.utils.email.send_email_smtp

[logging]
remote_logging = False
logging_level = INFO
fab_logging_level = WARN
log_format = [%%(asctime)s] {%%(filename)s:%%(lineno)d} %%(levelname)s - %%(message)s
log_filename_template = {{ ti.dag_id }}/{{ ti.task_id }}/{{ ts }}/{{ try_number }}.log

[metrics]
statsd_on = False
statsd_host = localhost
statsd_port = 8125
statsd_prefix = airflow

[celery]
broker_url = redis://redis:6379/0
result_backend = db+postgresql://airflow:airflow@postgres-airflow:5432/airflow

[clinical]
# Clinical trials specific settings
kafka_bootstrap_servers = kafka:29092
mlflow_tracking_uri = http://mlflow-server:5000
redis_host = redis
redis_port = 6379
minio_endpoint = http://minio:9000
spark_master = spark://spark-master:7077
model_serving_url = http://model-serving:8000

[smtp]
smtp_host = localhost
smtp_starttls = True
smtp_ssl = False
smtp_port = 587
smtp_mail_from = airflow@clinical-trials.local

[operators]
default_args = {
    'owner': 'clinical-mlops',
    'depends_on_past': False,
    'email_on_failure': True,
    'email_on_retry': False,
    'retries': 3,
    'retry_delay': timedelta(minutes=5),
    'execution_timeout': timedelta(hours=2)
}